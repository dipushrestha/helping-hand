@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<MudThemeProvider Theme="currentTheme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3" @onclick="this.RedirectToHome" Style="cursor: pointer">Helping Hand</MudText>
        <MudAppBarSpacer />
        <MudTooltip Text="Toggle light/dark theme">
            <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="@((e) => ToggleTheme())" />
        </MudTooltip>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="mudblazor-main-content">
        <div class="content px-4">
            @Body
        </div>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    MudTheme currentTheme = new MudTheme();
    MudTheme lightTheme = new LightTheme();
    MudTheme darkTheme = new DarkTheme();

    void RedirectToHome()
    {
        NavigationManager.NavigateTo("/");
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override void OnInitialized()
    {
        currentTheme = darkTheme;
    }

    void ToggleTheme()
    {
        if (currentTheme == lightTheme)
        {
            currentTheme = darkTheme;
        }
        else
        {
            currentTheme = lightTheme;
        }
    }
}
